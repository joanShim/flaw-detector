"use client";

import {
  Card,
  CardFooter,
  CardHeader,
  CardSubTitle,
  CardTitle,
} from "@/components/ui/Card";
import { Label } from "@/components/ui/Label";
import { useVulDBPosts } from "@/lib/queries/useVulDBPosts";
import { formatTimestampAsDaysAgo } from "@/lib/utils";
import { VulDBPinnedInfo, VulDBPostWithChip } from "@/types/post";
import { isCertCCContentType, isCnnvdContentType } from "@/types/typeGuards";
import Link from "next/link";
import { useMemo } from "react";
import VulDBPin from "./VulDBPin";
import VulDBShare from "./VulDBShare";
import { SimilarInfoCardSkeleton } from "./VulDBSkeleton";

function SimilarInfoPostCard({
  post,
  userId,
}: {
  post: VulDBPostWithChip;
  userId: number;
}) {
  if (!post) return null;

  const pinnedInfo: VulDBPinnedInfo = { userId, postId: post.id };

  return (
    <Card
      variant="article"
      size="short"
      className="h-[17.375rem] rounded-[1.25rem] pt-[4.5rem]"
    >
      <CardHeader>
        {post.chip === "new" && (
          <Label variant="new" className="absolute -top-11">
            NEW
          </Label>
        )}
        {post.chip === "hot" && <Label className="absolute -top-11">HOT</Label>}
        <CardTitle weight="bold">
          {post.title?.translated ||
            post.title?.original ||
            "제목을 불러오는 데 실패했습니다."}
        </CardTitle>
      </CardHeader>
      {post.source === "CERT/CC" && isCertCCContentType(post.content) && (
        <CardSubTitle
          size="big"
          isSingleLine
          className="block truncate font-medium"
        >
          {(post.content?.overview?.translated.length > 0
            ? post.content.overview.translated[0]
            : post.content.overview.original[0]
          )?.text || "내용을 불러오는 데 실패했습니다."}
        </CardSubTitle>
      )}
      {post.source === "CNNVD" && isCnnvdContentType(post.content) && (
        <CardSubTitle
          size="big"
          isSingleLine
          className="block truncate font-medium"
        >
          {post.content?.description?.translated ||
            "내용을 불러오는 데 실패했습니다."}
        </CardSubTitle>
      )}
      <CardFooter>
        <div className="inline-flex gap-[1.156rem]">
          <VulDBPin pinnedInfo={pinnedInfo} isScrapped={post.isScrapped} />
          <VulDBShare postId={post.id} />
        </div>
        <CardSubTitle className="font-medium">
          {post.created_at
            ? formatTimestampAsDaysAgo(post.created_at)
            : "작성일을 불러오는 데 실패했습니다."}
        </CardSubTitle>
      </CardFooter>
    </Card>
  );
}

export default function SimilarInfoPosts({
  postId,
  userId,
}: {
  postId: string;
  userId: number;
}) {
  const { posts: cachedPosts, postsLoading } = useVulDBPosts(
    userId,
    1,
    100,
    "",
  );

  const topSixRecentPosts: VulDBPostWithChip[] = useMemo(() => {
    if (!cachedPosts || cachedPosts.length === 0) {
      return [];
    }

    return cachedPosts
      .filter((post: VulDBPostWithChip) => post.id !== postId)
      .sort((a: any, b: any) => {
        const dateA = a.created_at ? a.created_at.seconds : 0;
        const dateB = b.created_at ? b.created_at.seconds : 0;
        return dateB - dateA;
      })
      .slice(0, 6);
  }, [cachedPosts, postId]);

  if (!userId || !postId) {
    return (
      <p className="text-center text-xl font-medium text-red-500">
        잘못된 접근입니다. 다시 시도해주세요.
      </p>
    );
  }

  return (
    <section className="w-full max-w-[82.125rem]">
      <h2 className="mb-4 text-2xl font-semibold leading-[1.816rem] tracking-[-0.01em]">
        비슷한 정보글
      </h2>

      {postsLoading ? (
        <ul className="grid grid-cols-3 gap-9">
          {Array.from({ length: 6 }).map((_, index) => (
            <li key={index}>
              <SimilarInfoCardSkeleton />
            </li>
          ))}
        </ul>
      ) : topSixRecentPosts.length === 0 ? (
        <p className="text-center text-xl font-medium text-black">
          비슷한 정보글을 찾을 수 없습니다.
        </p>
      ) : (
        <ul className="grid grid-cols-3 gap-9">
          {topSixRecentPosts.map((post) => (
            <li key={post.id}>
              <Link href={`/vuldb/items/${post.id}`}>
                <SimilarInfoPostCard post={post} userId={userId as number} />
              </Link>
            </li>
          ))}
        </ul>
      )}
    </section>
  );
}
